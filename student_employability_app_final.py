# -*- coding: utf-8 -*-
"""student_employability_app_final.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18-3dqWEVtZ9vWPIW7UxmFxQEr8itV66I
"""

# advanced_employability_app_final.py
import streamlit as st
import pandas as pd
import numpy as np
import joblib
from PIL import Image
import base64
from io import BytesIO

# üìã CONFIG
st.set_page_config(page_title="üéì Student Employability Predictor", layout="centered")

# üìã CSS for background, card, compact layout
st.markdown("""
<style>
.stApp {
    background-color: #e6f2ff;
}
html, body, [class*="css"] {
    font-size: 14px;
}
.block-container {
    padding-top: 1rem;
    padding-bottom: 1rem;
}
.card {
    background-color: #f7f7f7;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}
</style>
""", unsafe_allow_html=True)

# üìã Load Model & Scaler
@st.cache_resource
def load_model():
    try:
        model = joblib.load("employability_predictor.pkl")
        scaler = joblib.load("scaler.pkl")
        return model, scaler
    except FileNotFoundError:
        return None, None

model, scaler = load_model()

if model is None or scaler is None:
    st.error("‚ö†Ô∏è Model or scaler file not found.")
    st.stop()

# üìã Load & show header image
image = Image.open("group-business-people-silhouette-businesspeople-abstract-background_656098-461.avif")
st.image(image, use_container_width=True)

st.markdown("<h2 style='text-align: center;'>üéì Student Employability Predictor ‚Äî SVM Model</h2>", unsafe_allow_html=True)

st.markdown("""
Fill in the input features to predict employability.
""")

feature_columns = [
    'GENDER', 'GENERAL_APPEARANCE', 'GENERAL_POINT_AVERAGE',
    'MANNER_OF_SPEAKING', 'PHYSICAL_CONDITION', 'MENTAL_ALERTNESS',
    'SELF-CONFIDENCE', 'ABILITY_TO_PRESENT_IDEAS', 'COMMUNICATION_SKILLS',
    'STUDENT_PERFORMANCE_RATING', 'NO_SKILLS', 'Year_of_Graduate'
]

def predict_employability(model, scaler, input_df):
    scaled_input = scaler.transform(input_df)
    prediction = model.predict(scaled_input)
    prediction_proba = model.predict_proba(scaled_input)[0]
    return prediction[0], prediction_proba

# üìã Card container
st.markdown('<div class="card">', unsafe_allow_html=True)

col1, col2, col3 = st.columns(3)
inputs = {}

with col1:
    inputs['GENDER'] = st.radio("Gender", [0, 1], format_func=lambda x: "Male" if x==1 else "Female", index=1)
    inputs['GENERAL_APPEARANCE'] = st.slider("Appearance (1-5)", 1, 5, 3)
    inputs['GENERAL_POINT_AVERAGE'] = st.number_input("GPA (0.0-4.0)", 0.0, 4.0, 3.0, 0.01)
    inputs['MANNER_OF_SPEAKING'] = st.slider("Speaking (1-5)", 1, 5, 3)

with col2:
    inputs['PHYSICAL_CONDITION'] = st.slider("Physical (1-5)", 1, 5, 3)
    inputs['MENTAL_ALERTNESS'] = st.slider("Alertness (1-5)", 1, 5, 3)
    inputs['SELF-CONFIDENCE'] = st.slider("Confidence (1-5)", 1, 5, 3)
    inputs['ABILITY_TO_PRESENT_IDEAS'] = st.slider("Ideas (1-5)", 1, 5, 3)

with col3:
    inputs['COMMUNICATION_SKILLS'] = st.slider("Communication (1-5)", 1, 5, 3)
    inputs['STUDENT_PERFORMANCE_RATING'] = st.slider("Performance (1-5)", 1, 5, 3)
    inputs['NO_SKILLS'] = st.radio("Has No Skills", [0,1], format_func=lambda x: "No" if x==0 else "Yes", index=0)
    inputs['Year_of_Graduate'] = st.number_input("Graduation Year", 2019, 2022, 2022)

input_df = pd.DataFrame([inputs])[feature_columns]

if st.button("Predict"):
    pred, proba = predict_employability(model, scaler, input_df)
    if pred == 1:
        st.success("üéâ The student is predicted to be **Employable**!")
        st.balloons()
    else:
        st.warning("‚ö†Ô∏è The student is predicted to be **Less Employable**.")

    st.info(f"Probability of being Employable: {proba[1]*100:.2f}%")
    st.info(f"Probability of being Less Employable: {proba[0]*100:.2f}%")

st.markdown('</div>', unsafe_allow_html=True)

# üìã Footer
st.markdown("---")
st.caption("""
Disclaimer: This prediction model is for research and informational purposes only.  
Version 1.0, ¬© 2025 CHOONG MUH IN Last updated: August-2025. Developed by Ms.CHOONG MUH IN (TP068331).")
""")


